/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "services_index_js";
exports.ids = ["services_index_js"];
exports.modules = {

/***/ "./services/index.js":
/*!***************************!*\
  !*** ./services/index.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"subscribePhone\": function() { return /* binding */ subscribePhone; },\n/* harmony export */   \"createOrUpdateRegistration\": function() { return /* binding */ createOrUpdateRegistration; },\n/* harmony export */   \"saveUtmFromParams\": function() { return /* binding */ saveUtmFromParams; },\n/* harmony export */   \"getUtm\": function() { return /* binding */ getUtm; },\n/* harmony export */   \"trackFormSubmission\": function() { return /* binding */ trackFormSubmission; }\n/* harmony export */ });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// const TRACKER_HOST_URL = 'https://localhost:6001'; // Local Environment\n// const TRACKER_HOST_URL = 'https://tst.vyg.mobi'; // Test Environment\n// const TRACKER_HOST_URL = 'https://stg.vyg.mobi'; // Staging Environment\nconst TRACKER_HOST_URL = 'https://vyg.mobi'; // Production Environment\n\nconst REGISTRATION_API_URL = `${TRACKER_HOST_URL}/api/registration`; // Local Environment\n\nconst SUBSCRIBE_API_URL = `${TRACKER_HOST_URL}/api/TrackingEvents/SubscribeNumber`;\nconst REGISTRATION_STORAGE_KEY = 'voyage_registration';\nconst SUBSCRIBE_STORAGE_KEY = 'voyage_s';\nconst SUBSCRIBE_CAMPAIGN_ID = 4199; //Campaign ID of API Opt-in\n\nconst UTM_STORAGE_KEY = 'voyage_utm';\n\nconst snakeToCamel = s => s.replace(/(_\\w)/g, k => k[1].toUpperCase());\n\nconst subscribePhone = PhoneIn => {\n  fetch(SUBSCRIBE_API_URL, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      PhoneIn,\n      CampaignId: SUBSCRIBE_CAMPAIGN_ID\n    })\n  }).then(response => response.json()).then(({\n    subscriberId\n  }) => {\n    if (subscriberId) localStorage.setItem(SUBSCRIBE_STORAGE_KEY, subscriberId);\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n}; // form submission\n\nconst createOrUpdateRegistration = data => {\n  return new Promise((resolve, reject) => {\n    var _ref, _data$referralSourceN;\n\n    const {\n      publicId\n    } = JSON.parse(localStorage.getItem(REGISTRATION_STORAGE_KEY)) || {};\n\n    const body = _objectSpread(_objectSpread({}, data), {}, {\n      publicId,\n      referralSource: data.referralSource && ((_ref = data.referralSource + (data !== null && data !== void 0 && (_data$referralSourceN = data.referralSourceName) !== null && _data$referralSourceN !== void 0 && _data$referralSourceN.length ? ` - ${data === null || data === void 0 ? void 0 : data.referralSourceName}` : '')) === null || _ref === void 0 ? void 0 : _ref.trim())\n    });\n\n    const isUpdate = !!publicId;\n    fetch(REGISTRATION_API_URL, {\n      method: isUpdate ? 'PUT' : 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(response => response.json()).then(resData => {\n      if (resData.publicId) localStorage.setItem(REGISTRATION_STORAGE_KEY, JSON.stringify(resData));\n\n      if (isUpdate) {\n        localStorage.removeItem(REGISTRATION_STORAGE_KEY);\n      }\n\n      console.log('Success:', resData);\n      resolve();\n    }).catch(error => {\n      console.error('Error:', error);\n      resolve();\n    });\n  });\n};\nconst saveUtmFromParams = () => {\n  let result = '';\n\n  try {\n    const search = location.search.substring(1);\n    result = '{\"' + decodeURI(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}';\n    sessionStorage.setItem(UTM_STORAGE_KEY, result);\n  } catch {}\n\n  return result;\n};\nconst getUtm = () => {\n  let result = {};\n\n  try {\n    result = JSON.parse(sessionStorage.getItem(UTM_STORAGE_KEY));\n    result = Object.entries(result).reduce((x, [k, v]) => (x[snakeToCamel(k)] = v) && x, {});\n  } catch {}\n\n  return result;\n};\nconst trackFormSubmission = () => {\n  window.dataLayer = window.dataLayer || [];\n  window.dataLayer.push({\n    'event': 'leadFormSubmitSuccess'\n  });\n\n  if (window && typeof window.gtag === 'function') {\n    window.gtag('event', 'conversion', {\n      'send_to': 'AW-739656360/M9BLCNKKkdABEKiF2eAC'\n    });\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/index.js\n");

/***/ })

};
;